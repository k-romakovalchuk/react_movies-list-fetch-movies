{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","components/api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","setMovies","useState","inputValue","setinputValue","visible","setVisible","findMovie","setFindMovie","useEffect","url","fetch","then","res","ok","Error","status","statusText","json","Object","keys","length","undefined","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","some","App","state","this","setState","prevState","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.793b4903.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <div key={movie.imdbID}>\n          <MovieCard\n            movie={movie}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './FindMovie.scss';\nimport { request } from '../api';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  setMovies: (movie: Movie) => void\n  movies: Movie[]\n}\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  const [inputValue, setinputValue] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [findMovie, setFindMovie] = useState<Movie>();\n\n  useEffect(() => {\n    request(inputValue)\n      .then(movie => {\n        if (Object.keys(movie).length > 3) {\n          setFindMovie(movie);\n        } else {\n          setFindMovie(undefined);\n        }\n      });\n    setVisible(false);\n  }, [inputValue]);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${findMovie === undefined && visible && 'is-danger'}`}\n              value={inputValue}\n              onChange={(event) => setinputValue(event.target.value)}\n            />\n          </div>\n          {visible && findMovie === undefined && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => setVisible(true)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (!movies.some(movie => movie.imdbID === findMovie?.imdbID)\n                  && findMovie !== undefined) {\n                  setMovies(findMovie);\n                }\n\n                setinputValue('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {findMovie && visible === true && (\n          <MovieCard\n            movie={findMovie}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n","const API = 'https://www.omdbapi.com/?apikey=4e95fcdc&t=';\n\nexport const request = (url: string) => {\n  return fetch(`${API}${url}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            setMovies={(movie) => {\n              this.setState(prevState => ({\n                movies: [...prevState.movies, movie],\n              }));\n            }}\n            movies={movies}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}